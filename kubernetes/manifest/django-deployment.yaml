apiVersion: v1
kind: Service
metadata:
  name: django
spec:
  selector:
    app: dataportal
    tier: django
  ports:
    - protocol: "TCP"
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: meertime-img-pv-claim-dev
  labels:
    app: dataportal
    tier: django
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: dataportal
    tier: django
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: dataportal
      tier: django
  template:
    metadata:
      annotations:
        serviceAccountName: meertime
        vault.hashicorp.com/role: "meertime"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-secret-retrieve-control.sh: "kv/meertime/nexus/service"
        vault.hashicorp.com/agent-inject-template-retrieve-control.sh: |
          {{- with secret "kv/meertime/nexus/service" -}}
          #!/bin/sh

          set -o nounset
          wget --no-check-certificate --http-user='{{ .Data.NEXUS_USER }}' --http-password='{{ .Data.NEXUS_PASS }}' {{ .Data.NEXUS_URL }}/{{ .Data.NEXUS_CONTROL_DIR }}/$1
          {{- end }}
      labels:
        app: dataportal
        tier: django
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: meertime
      initContainers:
        - image: nexus.gwdc.org.au/docker/mysqldump:0.2
          name: mysql-control
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: host
          envFrom:
            - secretRef:
                name: db-control
            - secretRef:
                name: db-config
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /mnt/mysql
            - name: mysql-control-script
              mountPath: /mnt/mysql-control
          command: ["/bin/sh", "/mnt/mysql-control/control-mysql.sh"]
        - name: migrate
          image: nexus.gwdc.org.au/meertime/django:3.0.0
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: host
          envFrom:
            - secretRef:
                name: django-multi
            - secretRef:
                name: db-config
          command: ["python", "manage.py", "migrate"]
      containers:
        - name: django
          image: nexus.gwdc.org.au/meertime/django:3.0.0
          resources: {}
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: host
          volumeMounts:
            - name: meertime-img-storage-dev
              mountPath: /media
          envFrom: # defines DJANGO_SECRET_KEY, SENTRY_DSN, SLACK_WEBHOOK, and KRONOS_PAYLOAD
            - secretRef:
                name: django-multi
            - secretRef:
                name: db-config
          command:
            ["gunicorn", "--bind=0.0.0.0:8000", "meertime.wsgi:application"]
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim-dev
        - name: mysql-control-script
          configMap:
            name: mysql-control-map
        - name: meertime-img-storage-dev
          persistentVolumeClaim:
            claimName: meertime-img-pv-claim-dev
