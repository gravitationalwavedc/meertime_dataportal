---
# Source: mysqldump/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-bkp-configmap
  labels:
    app.kubernetes.io/name: mysql-bkp
data:
  MYSQL_HOST: "mysql"
  MYSQL_PORT: "3306"
  MYSQL_OPTS: "--opt --single-transaction"
  KEEP_DAYS: "3"
---
# Source: mysqldump/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-bkp-script-configmap
  labels:
    app.kubernetes.io/name: mysql-bkp-script-configmap
data:
  backup.sh: |-
    #!/bin/sh
    #
    # mysql backup script
    #

    BACKUP_DIR="/backup"
    TIMESTAMP="$(date +%Y%m%d%H%M%S)"
    echo "test mysql connection"
    if [ -z "$(mysql -h ${MYSQL_HOST} -P ${MYSQL_PORT} -u root -p${MYSQL_ROOT_PASSWORD} -B -e 'SHOW DATABASES;')" ]; then
      echo "mysql connection failed! exiting..."
      exit 1
    fi
    echo "started" > ${BACKUP_DIR}/${TIMESTAMP}.state


    echo "delete old backups"
    find ${BACKUP_DIR} -maxdepth 2 -mtime +${KEEP_DAYS} -regex "^${BACKUP_DIR}/.*[0-9]*_.*\.sql.tar.gz$" -type f -exec rm {} \;

    echo "Backing up db ${POSTGRES_DATABASE}"

    mysqldump ${MYSQL_OPTS} -h ${MYSQL_HOST} -P ${MYSQL_PORT} -u root -p${MYSQL_ROOT_PASSWORD} --databases ${POSTGRES_DATABASE} > ${TIMESTAMP}_${POSTGRES_DATABASE}.sql
    rc=$?

    if [ "$rc" != "0" ]; then
      echo "backup failed"
      exit 1
    fi

    echo "Archiving sqldumps"
    tar -cvf ${BACKUP_DIR}/${TIMESTAMP}.sql.tar.gz ${TIMESTAMP}*

    echo "complete" > ${BACKUP_DIR}/${TIMESTAMP}.state
    echo "Disk usage in ${BACKUP_DIR}"
    du -h -d 2 ${BACKUP_DIR}
    echo "Backup successful! :-)"
