apiVersion: v1
kind: Service
metadata:
  namespace: meertime-dev
  name: nginx
  labels:
    app: nginx
    tier: nginx
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: dataportal
    tier: nginx
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: meertime-dev
  name: ng-meertime
  labels:
    app: nginx
    tier: nginx
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: dataportal
      tier: nginx
  template:
    metadata:
      labels:
        app: dataportal
        tier: nginx
    spec:
      imagePullSecrets:
        - name: meertime-regcred
      serviceAccountName: meertime
      initContainers:
        - name: collectstatic
          image: nexus.gwdc.org.au/meertime/django:2.4
          imagePullPolicy: Always
          command: ["python", "manage.py", "collectstatic", "--noinput"]
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: host
          envFrom:
            - secretRef:
                name: django-multi
            - secretRef:
                name: db-config
          volumeMounts:
            - name: static-volume-django
              mountPath: /static
      containers:
        - name: ng-meertime
          image: nexus.gwdc.org.au/meertime/nginx:dev.1.1
          imagePullPolicy: Always
          resources: {}
          volumeMounts:
            - mountPath: /static
              name: static-volume-django
            - mountPath: /media
              name: meertime-img-storage-dev
      volumes:
        - name: static-volume-django
          emptyDir: {}
        - name: meertime-img-storage-dev
          persistentVolumeClaim:
            claimName: meertime-img-pv-claim-dev
