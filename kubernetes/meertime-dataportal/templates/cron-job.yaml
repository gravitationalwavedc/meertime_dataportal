{{- range $key, $value := .Values.cronJobs }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $value.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "meertime-dataportal.labels" $ | nindent 4 }}
spec:
  schedule: "{{ $value.schedule }}"
  concurrencyPolicy: {{ $value.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ $value.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ $value.successfulJobsHistoryLimit }}
  jobTemplate:
    metadata:
      labels:
        name: {{ $value.name }}
        cronjob-name: {{ $value.name }}
        {{- include "meertime-dataportal.labels" $ | nindent 8 }}
    spec:
      backoffLimit: 1
      template:
        spec:
          serviceAccountName: {{ $value.serviceAccountName }}
          containers:
            - command:
                {{- range $commandKey, $commandValue := $value.command }}
                - {{ $commandValue }}
                {{- end }}
              name: {{ $value.containersName }}
              image: {{ $value.image }}
              imagePullPolicy: {{ $.Values.image.pullPolicy }}
              resources: {}
              {{- if $value.env  }}
              env:
                {{- range $envKey, $envValue := $value.env }}
                - name: {{ $envValue.name }}
                  valueFrom:
                    {{- if $envValue.valueFrom.secretKeyRef }}
                    secretKeyRef:
                      name: {{ $envValue.valueFrom.secretKeyRef.name }}
                      key: {{ $envValue.valueFrom.secretKeyRef.key }}
                    {{- end }}
                    {{- if $envValue.valueFrom.configMapKeyRef }}
                    configMapKeyRef:
                      name: {{ $envValue.valueFrom.configMapKeyRef.name }}
                      key: {{ $envValue.valueFrom.configMapKeyRef.key }}
                    {{- end }}
                  {{- end }}
              {{- end }}
              {{- if $value.envFrom  }}
              envFrom:
                {{- range $envFromKey, $envFromValue := $value.envFrom }}
                - secretRef:
                    name: {{ $envFromValue.name }}
                {{- end }}
              {{- end }}
              {{- if $value.volumeMounts  }}
              volumeMounts:
                {{- range $volumeKey, $volumeValue := $value.volumeMounts }}
                  - name: {{ $volumeValue.name }}
                    mountPath: {{ $volumeValue.mountPath }}
                {{- end }}
              {{- end }}
          imagePullSecrets:
            - name: {{ $value.imagePullSecrets.name }}
          restartPolicy: Never
          volumes:
            {{- range $volumeKey, $volumeValue := $value.volumes }}
              - name: {{ $volumeValue.name }}
                {{- if $volumeValue.persistentVolumeClaim }}
                persistentVolumeClaim:
                  claimName: {{ $volumeValue.persistentVolumeClaim.claimName }}
                {{- end }}
                {{- if $volumeValue.configMap }}
                configMap:
                  name: {{ $volumeValue.configMap.name }}
                {{- end }}
            {{- end }}
        metadata:
          {{- with $value.annotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}

---
{{- end }}