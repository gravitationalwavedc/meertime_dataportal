# Generated by Django 3.2.19 on 2023-07-21 09:04

import dataportal.storage
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delay_cal_id', models.CharField(blank=True, max_length=16, null=True)),
                ('phase_up_id', models.CharField(blank=True, max_length=16, null=True)),
                ('calibration_type', models.CharField(choices=[('pre', 'pre'), ('post', 'post'), ('none', 'none')], max_length=4)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ephemeris',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ephemeris_data', models.JSONField(null=True)),
                ('ephemeris_hash', models.CharField(editable=False, max_length=32, null=True)),
                ('p0', models.FloatField()),
                ('dm', models.FloatField()),
                ('valid_from', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('valid_to', models.DateTimeField(default=datetime.datetime(2106, 2, 7, 6, 28, 15))),
                ('comment', models.TextField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MainProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.CharField(choices=[('UHF', 'UHF'), ('LBAND', 'LBAND'), ('SBAND_0', 'SBAND_0'), ('SBAND_1', 'SBAND_1'), ('SBAND_2', 'SBAND_2'), ('SBAND_3', 'SBAND_3'), ('SBAND_4', 'SBAND_4')], max_length=7)),
                ('frequency', models.FloatField()),
                ('bandwidth', models.FloatField()),
                ('nchan', models.IntegerField()),
                ('beam', models.IntegerField()),
                ('nant', models.IntegerField(blank=True, null=True)),
                ('nant_eff', models.IntegerField(blank=True, null=True)),
                ('npol', models.IntegerField()),
                ('obs_type', models.CharField(choices=[('cal', 'cal'), ('fold', 'fold'), ('search', 'search')], max_length=6)),
                ('utc_start', models.DateTimeField()),
                ('raj', models.CharField(max_length=32)),
                ('decj', models.CharField(max_length=32)),
                ('duration', models.FloatField(null=True)),
                ('nbit', models.IntegerField()),
                ('tsamp', models.FloatField()),
                ('fold_nbin', models.IntegerField(blank=True, null=True)),
                ('fold_nchan', models.IntegerField(blank=True, null=True)),
                ('fold_tsubint', models.IntegerField(blank=True, null=True)),
                ('filterbank_nbit', models.IntegerField(blank=True, null=True)),
                ('filterbank_npol', models.IntegerField(blank=True, null=True)),
                ('filterbank_nchan', models.IntegerField(blank=True, null=True)),
                ('filterbank_tsamp', models.FloatField(blank=True, null=True)),
                ('filterbank_dm', models.FloatField(blank=True, null=True)),
                ('calibration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.calibration')),
                ('ephemeris', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.ephemeris')),
            ],
        ),
        migrations.CreateModel(
            name='PipelineRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_name', models.CharField(max_length=64)),
                ('pipeline_description', models.CharField(blank=True, max_length=255, null=True)),
                ('pipeline_version', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(max_length=64)),
                ('job_state', models.CharField(choices=[('Pending', 'Pending'), ('Running', 'Running'), ('Completed', 'Completed'), ('Failed', 'Failed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=9)),
                ('location', models.CharField(max_length=255)),
                ('configuration', models.JSONField(blank=True, null=True)),
                ('ephemeris_download_link', models.URLField(null=True)),
                ('toas_download_link', models.URLField(null=True)),
                ('dm', models.FloatField(null=True)),
                ('dm_err', models.FloatField(null=True)),
                ('dm_epoch', models.FloatField(null=True)),
                ('dm_chi2r', models.FloatField(null=True)),
                ('dm_tres', models.FloatField(null=True)),
                ('sn', models.FloatField(null=True)),
                ('flux', models.FloatField(null=True)),
                ('rm', models.FloatField(null=True)),
                ('rm_err', models.FloatField(null=True)),
                ('percent_rfi_zapped', models.FloatField(null=True)),
                ('ephemeris', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.ephemeris')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.observation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True)),
                ('short', models.CharField(default='???', max_length=20)),
                ('embargo_period', models.DurationField(default=datetime.timedelta(days=548))),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('main_project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.mainproject')),
            ],
        ),
        migrations.CreateModel(
            name='Pulsar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('comment', models.TextField(help_text='Auto generated description based on information from the ANTF catalogue', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Telescope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_file', models.FileField(null=True, storage=dataportal.storage.OverwriteStorage(), upload_to=dataportal.storage.get_template_upload_location)),
                ('template_hash', models.CharField(editable=False, max_length=64, null=True)),
                ('band', models.CharField(choices=[('UHF', 'UHF'), ('LBAND', 'LBAND'), ('SBAND_0', 'SBAND_0'), ('SBAND_1', 'SBAND_1'), ('SBAND_2', 'SBAND_2'), ('SBAND_3', 'SBAND_3'), ('SBAND_4', 'SBAND_4')], max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.project')),
                ('pulsar', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pulsar')),
            ],
        ),
        migrations.CreateModel(
            name='Toa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive', models.CharField(max_length=128)),
                ('freq_MHz', models.FloatField()),
                ('mjd', models.DecimalField(decimal_places=12, max_digits=18)),
                ('mjd_err', models.FloatField()),
                ('telescope', models.CharField(max_length=32)),
                ('fe', models.CharField(max_length=32, null=True)),
                ('be', models.CharField(max_length=32, null=True)),
                ('f', models.CharField(max_length=32, null=True)),
                ('bw', models.IntegerField(null=True)),
                ('tobs', models.IntegerField(null=True)),
                ('tmplt', models.CharField(max_length=64, null=True)),
                ('gof', models.FloatField(null=True)),
                ('nbin', models.IntegerField(null=True)),
                ('nch', models.IntegerField(null=True)),
                ('chan', models.IntegerField(null=True)),
                ('rcvr', models.CharField(max_length=32, null=True)),
                ('snr', models.FloatField(null=True)),
                ('length', models.IntegerField(null=True)),
                ('subint', models.IntegerField(null=True)),
                ('dm_corrected', models.BooleanField(default=False)),
                ('minimum_nsubs', models.BooleanField(default=False)),
                ('maximum_nsubs', models.BooleanField(default=False)),
                ('obs_nchan', models.IntegerField(null=True)),
                ('ephemeris', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.ephemeris')),
                ('pipeline_run', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='toas', to='dataportal.pipelinerun')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.template')),
            ],
        ),
        migrations.CreateModel(
            name='Residual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mjd', models.DecimalField(decimal_places=12, max_digits=18)),
                ('day_of_year', models.FloatField()),
                ('binary_orbital_phase', models.FloatField(null=True)),
                ('residual_sec', models.FloatField()),
                ('residual_sec_err', models.FloatField()),
                ('residual_phase', models.FloatField()),
                ('residual_phase_err', models.FloatField(null=True)),
                ('ephemeris', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.ephemeris')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.project')),
                ('pulsar', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pulsar')),
                ('toa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residuals', to='dataportal.toa')),
            ],
        ),
        migrations.CreateModel(
            name='PulsarFoldSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_observation', models.DateTimeField()),
                ('latest_observation', models.DateTimeField()),
                ('timespan', models.IntegerField()),
                ('number_of_observations', models.IntegerField()),
                ('total_integration_hours', models.FloatField()),
                ('last_integration_minutes', models.FloatField(null=True)),
                ('all_bands', models.CharField(max_length=500)),
                ('last_sn', models.FloatField()),
                ('highest_sn', models.FloatField()),
                ('lowest_sn', models.FloatField()),
                ('avg_sn_pipe', models.FloatField(null=True)),
                ('max_sn_pipe', models.FloatField(null=True)),
                ('most_common_project', models.CharField(max_length=64)),
                ('all_projects', models.CharField(max_length=500)),
                ('main_project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.mainproject')),
                ('pulsar', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pulsar')),
            ],
            options={
                'ordering': ['-latest_observation'],
            },
        ),
        migrations.CreateModel(
            name='PulsarFoldResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embargo_end_date', models.DateTimeField(null=True)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataportal.observation')),
                ('pipeline_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataportal.pipelinerun')),
                ('pulsar', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pulsar')),
            ],
        ),
        migrations.AddField(
            model_name='pipelinerun',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.template'),
        ),
        migrations.CreateModel(
            name='PipelineImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, storage=dataportal.storage.OverwriteStorage(), upload_to=dataportal.storage.get_upload_location)),
                ('url', models.URLField(null=True)),
                ('cleaned', models.BooleanField(default=True)),
                ('image_type', models.CharField(choices=[('toa-dm-corrected', 'toa-dm-corrected'), ('toa-single', 'toa-single'), ('profile', 'profile'), ('profile-pol', 'profile-pol'), ('phase-time', 'phase-time'), ('phase-freq', 'phase-freq'), ('bandpass', 'bandpass'), ('snr-cumul', 'snr-cumul'), ('snr-single', 'snr-single')], max_length=16)),
                ('resolution', models.CharField(choices=[('high', 'high'), ('low', 'low')], max_length=4)),
                ('pulsar_fold_result', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='images', to='dataportal.pulsarfoldresult')),
            ],
        ),
        migrations.CreateModel(
            name='PipelineFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, storage=dataportal.storage.OverwriteStorage(), upload_to=dataportal.storage.get_pipeline_upload_location)),
                ('ozstar_path', models.CharField(blank=True, max_length=256, null=True)),
                ('file_type', models.CharField(blank=True, max_length=32, null=True)),
                ('pipeline_run', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pipelinerun')),
            ],
        ),
        migrations.AddField(
            model_name='observation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.project'),
        ),
        migrations.AddField(
            model_name='observation',
            name='pulsar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pulsar'),
        ),
        migrations.AddField(
            model_name='observation',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.telescope'),
        ),
        migrations.AddField(
            model_name='mainproject',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.telescope'),
        ),
        migrations.AddField(
            model_name='ephemeris',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.project'),
        ),
        migrations.AddField(
            model_name='ephemeris',
            name='pulsar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataportal.pulsar'),
        ),
        migrations.AddConstraint(
            model_name='template',
            constraint=models.UniqueConstraint(fields=('pulsar', 'project', 'band', 'template_hash'), name='Unique template for each pulsar, project and band.'),
        ),
        migrations.AlterUniqueTogether(
            name='pulsarfoldsummary',
            unique_together={('main_project', 'pulsar')},
        ),
        migrations.AddConstraint(
            model_name='pipelineimage',
            constraint=models.UniqueConstraint(fields=('pulsar_fold_result', 'image_type', 'cleaned', 'resolution'), name='Unique image type for a PulsarFoldResult'),
        ),
        migrations.AddConstraint(
            model_name='ephemeris',
            constraint=models.UniqueConstraint(fields=('project', 'ephemeris_hash'), name='Unique ephemeris for each project'),
        ),
    ]
